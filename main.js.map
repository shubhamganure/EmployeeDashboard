{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material.module.ts","./src/app/shared/spinner.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => import ('../app/employee/employee.module').then(m=> m.EmployeeModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {SpinnerService} from './shared/spinner.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'EmployeeManagement';\n  shouldSpinnerVisible: boolean = false;\n\n  constructor(\n    private spinnerService: SpinnerService,\n  ){}\n\n  ngOnInit() {\n    this.subscribeToSpinnerService();\n  }\n\n  subscribeToSpinnerService() {\n    this.spinnerService.showSpinner.subscribe(result => {\n      this.shouldSpinnerVisible = result;\n    });\n  }\n\n}\n","<div *ngIf=\"shouldSpinnerVisible\" class=\"app-progress-spinner-container\">\n  <!-- <mat-spinner></mat-spinner> -->\n  <div class=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  loginFormGroup: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.createLoginFormGroup();\n  }\n\n  createLoginFormGroup() {\n    this.loginFormGroup = this.fb.group({\n      userId: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  authenticateUser() {\n    if(this.loginFormGroup.valid){\n      if(this.loginFormGroup.get('userId').value == \"1234\" &&\n      this.loginFormGroup.get('password').value == \"user1234\" ){\n        this.snackBar.open(\"User logged in Successfully!\", '',{\n          duration: 2000,\n          horizontalPosition: 'end',\n          panelClass: ['mat-toolbar', 'mat-primary']\n        });\n        this.router.navigate(['dashboard']);\n      } else {\n        this.snackBar.open(\"Credentials Invalid!\", '',{\n          duration: 2000,\n          horizontalPosition: 'end',\n          panelClass: ['mat-toolbar', 'mat-warn']\n        });\n      }\n    } else {\n      this.loginFormGroup.markAllAsTouched();\n    }\n  }\n\n}\n","<div class=\"login-container\">\n  <mat-card fxLayout.xs=\"column\" fxFlex=\"30\" fxFlex.xs=\"90\">\n      <form  fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\" [formGroup]=\"loginFormGroup\">\n        <div fxLayout=\"row\" fxLayoutAlign.xs=\"center\" fxLayoutAlign=\"center center\">\n          <h2>User Login</h2>\n        </div>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>User Id\n          </mat-label>\n          <input required matInput placeholder=\"Enter user id\" autocomplete=\"off\" formControlName=\"userId\">\n          <mat-error>User Id must be\n            valid</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Password</mat-label>\n            <input required matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Enter your password\"\n              autocomplete=\"off\" formControlName=\"password\">\n            <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\"\n              [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n          <mat-error>Password must\n            be valid</mat-error>\n        </mat-form-field>\n      </form>\n      <div  fxLayout=\"column\" fxLayoutAlign=\"center\"  class=\"login-btn-container\">\n        <button type=\"submit\" (click)=\"authenticateUser()\" mat-raised-button color=\"primary\" fxFlex=50\n          >Login</button>\n      </div>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    // ClipboardModule,\r\n    // CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    // MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\n\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  private showSpinnerSource = new BehaviorSubject<boolean>(false);\n  showSpinner = this.showSpinnerSource.asObservable()\n\n  constructor() {\n  }\n\n  setSpinnerVisibility(shouldSpinnerVisible: boolean) {\n    this.showSpinnerSource.next(shouldSpinnerVisible);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}