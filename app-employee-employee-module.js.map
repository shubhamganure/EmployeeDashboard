{"version":3,"sources":["./src/app/employee/employee-dashboard/employee-dashboard.component.ts","./src/app/employee/employee-dashboard/employee-dashboard.component.html","./src/app/employee/employee-routing.module.ts","./src/app/employee/employee.module.ts","./src/app/employee/employees/create-employee/create-employee.component.ts","./src/app/employee/employees/create-employee/create-employee.component.html","./src/app/employee/employees/employee-details/employee-details.component.ts","./src/app/employee/employees/employee-details/employee-details.component.html","./src/app/employee/employees/employees.component.ts","./src/app/employee/employees/employees.component.html","./src/app/employee/service/employee.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;AAQ3C,MAAM,0BAA0B;IAGrC,YACU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAEzB,WAAW,CAAC,GAAE,EAAE;YACd,IAAI,OAAO,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;YAC/D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,IAAI,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE;YACpB,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC;YAChC,IAAI,KAAK,GAAK,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;YACxC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,EAAE;YAC3C,IAAI,OAAO,GAAG,OAAO,GAAG,EAAE;YAE1B,OAAO,CAAC,KAAK,EAAC,OAAO,EAAC,OAAO,CAAC;iBACzB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9B,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;iBACpC,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;;oGAlCU,0BAA0B;0GAA1B,0BAA0B;QCRvC,iFACE;QAAA,kFACE;QAAA,yEACE;QAAA,yEACG;QAAA,4EAA4E;QAAA,8EAAmD;QAAA,iEAAM;QAAA,4DAAW;QAAA,4DAAS;QAC1J,0EAAgB;QAAA,wFAA6B;QAAA,4DAAO;QACtD,4DAAM;QACN,0EAAkC;QAAA,wDAAY;QAAA,4DAAO;QACrD,0EACE;QAAA,6EACE;QAD0C,mJAAS,YAAQ,IAAC;QAC5D,4EAAW;QAAA,8EAAkB;QAAA,4DAAW;QACxC,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACrB,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAkB;QACpB,4DAAc;QACd,4EAA+B;;QAb0B,0DAA2B;QAA3B,oFAA2B;QAG5C,0DAAY;QAAZ,6EAAY;;6FDCvC,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACwC;AACI;AAC9B;;;AAErE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2GAA0B;QACrC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,WAAW;aACxB;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,iFAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,4BAA4B;gBAClC,SAAS,EAAE,+GAAwB;aACpC;SACF;KACF;CACF,CAAC;AAMK,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAHvB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,qBAAqB,uFAFtB,4DAAY;6FAEX,qBAAqB;cAJjC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEmB;AACG;AAC2B;AACG;AACJ;AAC3C;AACP;;AAWtC,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAPhB;YACP,4DAAY;YACZ,8EAAqB;YACrB,+DAAc;YACd,0DAAW;SACZ;mIAEU,cAAc,mBARV,iFAAkB,EAAE,4GAAuB,EAAE,+GAAwB,EAAE,2GAA0B,aAE9G,4DAAY;QACZ,8EAAqB;QACrB,+DAAc;QACd,0DAAW;6FAGF,cAAc;cAT1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,iFAAkB,EAAE,4GAAuB,EAAE,+GAAwB,EAAE,2GAA0B,CAAC;gBACjH,OAAO,EAAE;oBACP,4DAAY;oBACZ,8EAAqB;oBACrB,+DAAc;oBACd,0DAAW;iBACZ;aACF;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;;;;;;;;;;ICqCnE,6EACG;IADmD,oUAA0B;IAC7E,iEAAM;IAAA,4DAAS;;;;IAChB,6EACC;IADqD,oUAA0B;IAC/E,iEAAM;IAAA,4DAAS;;AD5BjB,MAAM,uBAAuB;IASlC,YACU,EAAe,EACf,QAAqB,EACrB,SAAgD,EAChD,eAAgC,EAChC,cAA8B,EACN,kBAAuB;QAL/C,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAa;QACrB,cAAS,GAAT,SAAS,CAAuC;QAChD,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QACN,uBAAkB,GAAlB,kBAAkB,CAAK;QAbzD,gBAAW,GAAW,iBAAiB,CAAC;QAGxC,+BAA0B,GAAiB,IAAI,CAAC;QAChD,+BAA0B,GAAiB,IAAI,CAAC;QAChD,+BAA0B,GAAiB,IAAI,CAAC;IAS5C,CAAC;IAEL,QAAQ;QACN,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,QAAQ,EAAE;YAC9C,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;YACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;SAClD;QACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;YACnE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;YACpE,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;SACxE,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,UAAkB;QAChC,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAC,EAAE;YAC5G,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,IAAG,GAAG,CAAC,MAAM,EAAC;gBACZ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC;gBAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAC;oBACvC,QAAQ,EAAE,IAAI;oBACd,kBAAkB,EAAE,KAAK;oBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;iBACrC,CAAC,CAAC;aACJ;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAC;gBAChD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,KAAK;gBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;aACrC,CAAC,CAAC;QACL,CAAC,CACA;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QACrE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAChF,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAClF,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IACxF,CAAC;IAED,cAAc;QACZ,IAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAC;YAC9B,IAAI,IAAI,GAAG;gBACT,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK;gBAC5C,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;gBAC9C,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;gBAChD,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK;aACrD;YACD,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE;gBACxG,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAG,GAAG,CAAC,MAAM,EAAC;oBACZ,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;oBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,EAAC;wBACjC,QAAQ,EAAE,IAAI;wBACd,kBAAkB,EAAE,KAAK;wBACzB,UAAU,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;qBAC3C,CAAC,CAAC;oBACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;iBAChD;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAC;oBAChD,QAAQ,EAAE,IAAI;oBACd,kBAAkB,EAAE,KAAK;oBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;iBACrC,CAAC,CAAC;YACL,CAAC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAC;gBAChD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,KAAK;gBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;aACrC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,cAAc;QACZ,IAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAC;YAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;YACxD,IAAI,IAAI,GAAG;gBACT,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK;gBAC5C,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;gBAC9C,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;gBAChD,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK;aACrD;YACD,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE;gBACpH,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAG,GAAG,CAAC,MAAM,EAAC;oBACZ,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;oBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,EAAC;wBACjC,QAAQ,EAAE,IAAI;wBACd,kBAAkB,EAAE,KAAK;wBACzB,UAAU,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;qBAC3C,CAAC,CAAC;oBACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;iBAChD;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAC;oBAChD,QAAQ,EAAE,IAAI;oBACd,kBAAkB,EAAE,KAAK;oBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;iBACrC,CAAC,CAAC;YACL,CAAC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAC;gBAChD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,KAAK;gBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;aACrC,CAAC,CAAC;SACJ;IAEH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,0BAA0B,EAAC;YACjC,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;SAC/C;QACD,IAAG,IAAI,CAAC,0BAA0B,EAAC;YACjC,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;SAC/C;QACD,IAAG,IAAI,CAAC,0BAA0B,EAAC;YACjC,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;SAC/C;IACH,CAAC;;8FAlKU,uBAAuB,6uBAexB,wEAAe;uGAfd,uBAAuB;QCdpC,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,uDAAe;QAAA,4DAAK;QACxB,4EACA;QAD2C,+IAAS,wBAAoB,IAAC;QACzE,2EAAW;QAAA,gEAAK;QAAA,4DAAW;QAC7B,4DAAS;QACT,4DAAM;QACN,yEACE;QAAA,0EACE;QAAA,oFACE;QAAA,6EAAW;QAAA,wEACX;QAAA,4DAAY;QACZ,uEACA;QAAA,6EAAW;QAAA,qFACJ;QAAA,4DAAY;QACrB,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,gEACX;QAAA,4DAAY;QACZ,uEACA;QAAA,6EAAW;QAAA,6EACJ;QAAA,4DAAY;QACrB,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,iEACX;QAAA,4DAAY;QACZ,uEACA;QAAA,6EAAW;QAAA,8EACJ;QAAA,4DAAY;QACrB,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,mEACX;QAAA,4DAAY;QACZ,uEACA;QAAA,6EAAW;QAAA,gFACJ;QAAA,4DAAY;QACrB,4DAAiB;QACnB,4DAAO;QACP,2EACE;QAAA,4HACG;QACD,4HACC;QACL,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA3CE,0DAAe;QAAf,gFAAe;QAMqD,0DAA+B;QAA/B,4FAA+B;QA+B7F,2DAA6C;QAA7C,2GAA6C;QAE3C,0DAA6C;QAA7C,2GAA6C;;6FD3BhD,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;sBAgBI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE7B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;AAc3C,MAAM,wBAAwB;IAOnC,YACU,MAAsB,EACtB,eAAgC,EAChC,QAAqB,EACrB,QAAkB,EAClB,cAA8B;QAJ9B,WAAM,GAAN,MAAM,CAAgB;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAa;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAgB;QAPxC,+BAA0B,GAAgB,IAAI,CAAC;IAQ3C,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAC,EAAE;YACpH,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,IAAG,GAAG,CAAC,MAAM,EAAC;gBACV,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAC;oBACvC,QAAQ,EAAE,IAAI;oBACd,kBAAkB,EAAE,KAAK;oBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;iBACrC,CAAC,CAAC;aACJ;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAC;gBAChD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,KAAK;gBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;aACrC,CAAC,CAAC;QACL,CAAC,CACA;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,0BAA0B,EAAC;YACjC,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;SAC/C;IACH,CAAC;;gGArDU,wBAAwB;wGAAxB,wBAAwB;QCdrC,yEACE;QAAA,8EACE;QAAA,yEACE;QAAA,4EACE;QAD2C,gJAAS,kBAAc,IAAC;QACnE,2EAAW;QAAA,6EAAkB;QAAA,4DAAW;QAC1C,4DAAS;QACT,oEAAI;QAAA,4EAAiB;QAAA,4DAAI;QAC7B,4DAAM;QACJ,yEACE;QAAA,yEACE;QAAA,yEAAwB;QAAA,wEAAY;QAAA,4DAAK;QACzC,wEAAM;QAAA,wDAAmB;QAAA,4DAAO;QAClC,4DAAM;QACN,0EACE;QAAA,yEAAwB;QAAA,0EAAc;QAAA,4DAAK;QAC3C,wEAAM;QAAA,wDAA8B;QAAA,4DAAO;QAC7C,4DAAM;QACN,0EACE;QAAA,yEAAwB;QAAA,4EAAgB;QAAA,4DAAK;QAC7C,wEAAM;QAAA,wDAAgC;QAAA,4DAAO;QAC/C,4DAAM;QACN,0EACE;QAAA,yEAAwB;QAAA,yEAAa;QAAA,4DAAK;QAC1C,wEAAM;QAAA,wDAA6B;QAAA,4DAAO;QAC5C,4DAAM;QACR,4DAAM;QACR,4DAAW;QACb,4DAAM;;QAhBQ,2DAAmB;QAAnB,oFAAmB;QAInB,0DAA8B;QAA9B,+FAA8B;QAI9B,0DAAgC;QAAhC,iGAAgC;QAIhC,0DAA6B;QAA7B,8FAA6B;;6FDT9B,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGW;AAMyB;;;;;;;;;;;;;;;;;;ICDlF,sEACE;IAAA,8EAAuD;IAAA,0EAAe;IAAA,4DAAW;IACnF,4DAAM;;;IAIF,kFAAmC;IAAA,sEAAW;IAAA,4DAAkB;;;IAChE,2EAAkC;IAAA,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,6EAAc;;;IAG9C,sFAAoE;IAAA,wEAAa;IAAA,4DAAkB;;;IACnG,+EACE;IAAA,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,mGACF;;;IAGA,sFAA+D;IAAA,kEAAO;IAAA,4DAAkB;;;;IACxF,+EACE;IADQ,+OAAS,wBAAwB,IAAC;IAC1C,sEACE;IAAA,qFACE;IAAA,wEACE;IADe,yXAAgC;IAC/C,+EAAsB;IAAA,+DAAI;IAAA,4DAAW;IACrC,uEAAO;IAAA,+DAAI;IAAA,4DAAO;IACpB,4DAAI;IACJ,wEACE;IADe,2XAAkC;IACjD,gFAAsB;IAAA,0EAAc;IAAA,4DAAW;IAC/C,wEAAO;IAAA,kEAAM;IAAA,4DAAO;IACtB,4DAAI;IACN,4DAAW;IACX,8EACE;IAAA,gFAA+B;IAAA,gFAAoB;IAAA,4DAAW;IAChE,4DAAS;IACX,4DAAM;IACR,4DAAW;;;IAJiB,2DAA0C;IAA1C,mFAA0C;;;IAMxE,4EAAqE;;;;IACrE,8EAAsI;IAAjG,kYAAqC;IAAkD,4DAAU;;;IAhCxI,+EACE;IAAA,2EACA;IAAA,qJAAmC;IACnC,wIAAkC;IACpC,qEAAe;IACb,4EACE;IAAA,sJAAoE;IACpE,wIACE;IAEJ,qEAAe;IACf,4EACE;IAAA,sJAA+D;IAC/D,yIACE;IAgBJ,qEAAe;IACf,sJAAoD;IACpD,wIAA4H;IAC9H,4DAAY;;;IAjCD,6FAA6B;IA+BtB,2DAAmC;IAAnC,oGAAmC;IACwB,0DAAgD;IAAhD,qGAAgD;;AD5B5H,MAAM,kBAAkB;IAM7B,YACU,eAAgC,EAChC,QAAqB,EACrB,MAAiB,EACjB,MAAc,EACd,cAA8B;QAJ9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAa;QACrB,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QATxC,oBAAe,GAAY,KAAK,CAAC;QACjC,6BAAwB,GAAiB,IAAI,CAAC;QAC9C,+BAA0B,GAAiB,IAAI,CAAC;QAUhD,qBAAgB,GAAa,CAAC,IAAI,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;QAChE,mBAAc,GAAkC,IAAI,0EAAkB,EAAE,CAAC;IAHrE,CAAC;IAKL,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,GAAO,EAAC,EAAE;YAC1F,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,IAAG,GAAG,CAAC,MAAM,EAAC;gBACZ,IAAG,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAC;oBACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAC7B;qBAAM;oBACL,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAC9B;gBACD,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC;aAChC;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAC;gBAChD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,KAAK;gBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;aACrC,CAAC,CAAC;QACL,CAAC,CACA;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,YAAY,CAAC,UAAkB;QAC7B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAChD,CAAC;IAED,kBAAkB,CAAC,MAAc,EAAE,EAAU;QAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE;gBACJ,MAAM,EAAE,MAAM;gBACd,EAAE,EAAE,EAAE;aACP;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,CAAC,cAAc,EAAE;gBACzB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,UAAkB;QAC/B,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE;YAC9F,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,IAAG,GAAG,CAAC,MAAM,EAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,EAAC;oBACjC,QAAQ,EAAE,IAAI;oBACd,kBAAkB,EAAE,KAAK;oBACzB,UAAU,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;iBAC3C,CAAC,CAAC;gBACH,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAC;gBAChD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,KAAK;gBACzB,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;aACrC,CAAC,CAAC;QACL,CAAC,CACA;IACH,CAAC;IAED,mBAAmB,CAAC,UAAkB;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,UAAU,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,wBAAwB,EAAC;YAC/B,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;SAC7C;QACD,IAAG,IAAI,CAAC,0BAA0B,EAAC;YACjC,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;SAC/C;IACH,CAAC;;oFAzGU,kBAAkB;kGAAlB,kBAAkB;QChB/B,yEACE;QAAA,8EACE;QAAA,yEACI;QAAA,oEAAI;QAAA,yEAAc;QAAA,4DAAI;QACtB,4EACE;QADsB,0IAAS,iBAAa,IAAC;QAC7C,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAAA,wEAC1B;QAAA,4DAAS;QACb,4DAAM;QACN,8GACE;QAEF,6MACE;QAmCJ,4DAAW;QACb,4DAAM;;;QAxCG,0DAAyC;QAAzC,qFAAyC;;6FDQrC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,eAAe;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,kDAAkD,CAAC,CAAC;IACjG,CAAC;IAED,cAAc,CAAC,IAAQ;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,+CAA+C,EAAE,IAAI,CAAC,CAAC;IACpF,CAAC;IAED,cAAc,CAAC,UAAkB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,iDAAiD,UAAU,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,sBAAsB,CAAC,UAAkB;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,mDAAmD,UAAU,EAAE,CAAC,CAAC;IAChH,CAAC;IAED,cAAc,CAAC,UAAkB,EAAG,IAAQ;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,iDAAiD,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC;IACjG,CAAC;;8EAtBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"app-employee-employee-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-dashboard',\n  templateUrl: './employee-dashboard.component.html',\n  styleUrls: ['./employee-dashboard.component.scss']\n})\nexport class EmployeeDashboardComponent implements OnInit {\n  dispTime: any;\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.getDate();\n  }\n\n  getDate(){\n    let crrDate = new Date();\n\n    setInterval(()=>{\n      let seconds = (new Date().getTime() - crrDate.getTime()) / 1000;\n       this.dispTime = toHHMMSS(seconds);\n    }, 1000);\n\n    let toHHMMSS = (secs) => {\n        let sec_num = parseInt(secs, 10)\n        let hours   = Math.floor(sec_num / 3600)\n        let minutes = Math.floor(sec_num / 60) % 60\n        let seconds = sec_num % 60\n\n        return [hours,minutes,seconds]\n            .map(v => v < 10 ? \"0\" + v : v)\n            .filter((v,i) => v !== \"00\" || i > 0)\n            .join(\":\")\n    }\n  }\n\n  logout(){\n    this.router.navigate(['/login']);\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n      <div fxFlex=\"90\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"25px\">\n         <button matTooltip=\"Dashboard\"  mat-icon-button [routerLink]=\"'/dashboard'\"><mat-icon class=\"header-logo-icon\" mat-icon-button>person</mat-icon></button>\n        <span fxHide.xs>Employee Management Dashboard</span>\n      </div>\n      <span style=\"margin-right: 20px;\">{{dispTime}}</span>\n      <div fxFlex=\"10\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <button matTooltip=\"logout\" mat-icon-button (click)=\"logout()\">\n          <mat-icon >power_settings_new</mat-icon>\n          <span>Logout</span>\n        </button>\n      </div>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeDashboardComponent } from './employee-dashboard/employee-dashboard.component';\nimport { EmployeeDetailsComponent } from './employees/employee-details/employee-details.component';\nimport { EmployeesComponent } from './employees/employees.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: EmployeeDashboardComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'employees'\n      },\n      {\n        path: 'employees',\n        component: EmployeesComponent\n      },\n      {\n        path: 'employeeDetail/:employeeId',\n        component: EmployeeDetailsComponent\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { CreateEmployeeComponent } from './employees/create-employee/create-employee.component';\nimport { EmployeeDetailsComponent } from './employees/employee-details/employee-details.component';\nimport { EmployeeDashboardComponent } from './employee-dashboard/employee-dashboard.component';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [EmployeesComponent, CreateEmployeeComponent, EmployeeDetailsComponent, EmployeeDashboardComponent],\n  imports: [\n    CommonModule,\n    EmployeeRoutingModule,\n    MaterialModule,\n    FormsModule\n  ]\n})\nexport class EmployeeModule { }\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Subscription } from 'rxjs';\nimport { SpinnerService } from 'src/app/shared/spinner.service';\nimport { EmployeeData } from '../../Models/employeeDetailResp';\nimport { EmployeeService } from '../../service/employee.service';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.scss']\n})\nexport class CreateEmployeeComponent implements OnInit {\n  employeeFormGroup: FormGroup;\n  dialogTitle: string = \"Create Employee\";\n  employeeData:EmployeeData;\n\n  EmployeeDetailSubscription: Subscription = null;\n  EmployeeCreateSubscription: Subscription = null;\n  EmployeeUpdateSubscription: Subscription = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    private dialogRef: MatDialogRef<CreateEmployeeComponent>,\n    private employeeService: EmployeeService,\n    private spinnerService: SpinnerService,\n    @Inject(MAT_DIALOG_DATA) public dialogInjectedData: any\n  ) { }\n\n  ngOnInit(): void {\n    if (this.dialogInjectedData.action == \"update\") {\n      this.dialogTitle = \"Update Employee\";\n      this.getEmployeeData(this.dialogInjectedData.id);\n    }\n    this.createLoginFormGroup();\n  }\n\n  createLoginFormGroup() {\n    this.employeeFormGroup = this.fb.group({\n      id: ['', [Validators.required,Validators.pattern(\"^[1-9][0-9]*$\")]],\n      age: ['', [Validators.required,Validators.pattern(\"^[1-9][0-9]*$\")]],\n      name: ['', Validators.required],\n      salary: ['', [Validators.required,Validators.pattern(\"^[1-9][0-9]*$\")]],\n    });\n  }\n\n  getEmployeeData(employeeId: number){\n    this.spinnerService.setSpinnerVisibility(true);\n   this.EmployeeDetailSubscription = this.employeeService.getEmployeeDetailsById(employeeId).subscribe((res:any)=>{\n      this.spinnerService.setSpinnerVisibility(false);\n      if(res.status){\n        this.employeeData = res.data;\n        this.setMenuDetails();\n      } else {\n        this.snackBar.open(\"No data found!!\", '',{\n          duration: 2000,\n          horizontalPosition: 'end',\n          panelClass: ['Employee', 'mat-warn']\n        });\n      }\n    },\n    error =>{\n      this.spinnerService.setSpinnerVisibility(false);\n      this.snackBar.open(\"Something went wrong..!!\", '',{\n        duration: 2000,\n        horizontalPosition: 'end',\n        panelClass: ['Employee', 'mat-warn']\n      });\n    }\n    )\n  }\n\n  setMenuDetails() {\n    this.employeeFormGroup.controls[\"id\"].setValue(this.employeeData.id);\n    this.employeeFormGroup.controls[\"age\"].setValue(this.employeeData.employee_age);\n    this.employeeFormGroup.controls[\"name\"].setValue(this.employeeData.employee_name);\n    this.employeeFormGroup.controls[\"salary\"].setValue(this.employeeData.employee_salary);\n  }\n\n  createEmployee(){\n    if(this.employeeFormGroup.valid){\n      let body = {\n        \"id\": this.employeeFormGroup.get('id').value,\n        \"age\": this.employeeFormGroup.get('age').value,\n        \"name\": this.employeeFormGroup.get('name').value,\n        \"salary\": this.employeeFormGroup.get('salary').value\n      }\n      this.spinnerService.setSpinnerVisibility(true);\n     this.EmployeeCreateSubscription = this.employeeService.createEmployee(JSON.stringify(body)).subscribe(res=>{\n        this.spinnerService.setSpinnerVisibility(false);\n        if(res.status){\n          console.log('CreateRes', res);\n          this.snackBar.open(res.message, '',{\n            duration: 2000,\n            horizontalPosition: 'end',\n            panelClass: ['mat-toolbar', 'mat-primary']\n          });\n          this.dialogRef.close({ isNeedToReload: true });\n        }\n      },\n      error =>{\n        this.spinnerService.setSpinnerVisibility(false);\n        this.snackBar.open(\"Something went wrong..!!\", '',{\n          duration: 2000,\n          horizontalPosition: 'end',\n          panelClass: ['Employee', 'mat-warn']\n        });\n      })\n    } else {\n      this.employeeFormGroup.markAllAsTouched();\n      this.snackBar.open(\"Please add proper field!\", '',{\n        duration: 2000,\n        horizontalPosition: 'end',\n        panelClass: ['Employee', 'mat-warn']\n      });\n    }\n  }\n\n  updateEmployee(){\n    if(this.employeeFormGroup.valid){\n      let employeeId = this.employeeFormGroup.get('id').value;\n      let body = {\n        \"id\": this.employeeFormGroup.get('id').value,\n        \"age\": this.employeeFormGroup.get('age').value,\n        \"name\": this.employeeFormGroup.get('name').value,\n        \"salary\": this.employeeFormGroup.get('salary').value\n      }\n      this.spinnerService.setSpinnerVisibility(true);\n     this.EmployeeUpdateSubscription = this.employeeService.updateEmployee(employeeId, JSON.stringify(body)).subscribe(res=>{\n        this.spinnerService.setSpinnerVisibility(false);\n        if(res.status){\n          console.log('UpdateRes', res);\n          this.snackBar.open(res.message, '',{\n            duration: 2000,\n            horizontalPosition: 'end',\n            panelClass: ['mat-toolbar', 'mat-primary']\n          });\n          this.dialogRef.close({ isNeedToReload: true });\n        }\n      },\n      error =>{\n        this.spinnerService.setSpinnerVisibility(false);\n        this.snackBar.open(\"Something went wrong..!!\", '',{\n          duration: 2000,\n          horizontalPosition: 'end',\n          panelClass: ['Employee', 'mat-warn']\n        });\n      })\n    } else {\n      this.employeeFormGroup.markAllAsTouched();\n      this.snackBar.open(\"Please add proper field!\", '',{\n        duration: 2000,\n        horizontalPosition: 'end',\n        panelClass: ['Employee', 'mat-warn']\n      });\n    }\n\n  }\n\n  onCloseDialogClick() {\n    this.dialogRef.close({ isNeedToReload: false });\n  }\n\n  ngOnDestroy(){\n    if(this.EmployeeDetailSubscription){\n      this.EmployeeDetailSubscription.unsubscribe();\n    }\n    if(this.EmployeeCreateSubscription){\n      this.EmployeeCreateSubscription.unsubscribe();\n    }\n    if(this.EmployeeUpdateSubscription){\n      this.EmployeeUpdateSubscription.unsubscribe();\n    }\n  }\n\n}\n","<div fxLayout=\"column\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"dialog-title\">\n    <h2>{{dialogTitle}}</h2>\n    <button matTooltip=\"close\" mat-icon-button (click)=\"onCloseDialogClick()\">\n    <mat-icon >close</mat-icon>\n  </button>\n  </div>\n  <div fxLayout=\"column\" fxFlex=\"100\">\n    <form  fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\" [formGroup]=\"employeeFormGroup\">\n      <mat-form-field fxFlex=\"100\" appearance=\"outline\">\n        <mat-label>Employee Id\n        </mat-label>\n        <input required matInput placeholder=\"Enter employee id\" autocomplete=\"off\" formControlName=\"id\">\n        <mat-error>Employee Id must be\n          valid</mat-error>\n      </mat-form-field>\n      <mat-form-field fxFlex=\"100\" appearance=\"outline\">\n        <mat-label>Age\n        </mat-label>\n        <input required matInput placeholder=\"Enter age\" autocomplete=\"off\" formControlName=\"age\">\n        <mat-error>Age must be\n          valid</mat-error>\n      </mat-form-field>\n      <mat-form-field fxFlex=\"100\" appearance=\"outline\">\n        <mat-label>Name\n        </mat-label>\n        <input required matInput placeholder=\"Enter Name\" autocomplete=\"off\" formControlName=\"name\">\n        <mat-error>Name must be\n          valid</mat-error>\n      </mat-form-field>\n      <mat-form-field fxFlex=\"100\" appearance=\"outline\">\n        <mat-label>Salary\n        </mat-label>\n        <input required matInput placeholder=\"Enter salary\" autocomplete=\"off\" formControlName=\"salary\">\n        <mat-error>salary must be\n          valid</mat-error>\n      </mat-form-field>\n    </form>\n    <div  fxLayout=\"column\" fxLayoutAlign=\"center\" >\n      <button *ngIf=\"dialogInjectedData.action != 'update'\" (click)=\"createEmployee()\"  mat-raised-button color=\"primary\" fxFlex=50\n        >Create</button>\n        <button *ngIf=\"dialogInjectedData.action == 'update'\" (click)=\"updateEmployee()\"  mat-raised-button color=\"primary\" fxFlex=50\n        >Update</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmployeeData } from '../../Models/employeeDetailResp';\nimport { EmployeeService } from '../../service/employee.service';\nimport { Location } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { SpinnerService } from 'src/app/shared/spinner.service';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.scss']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  employeeData:EmployeeData;\n  employeeId: number;\n\n  EmployeeDetailSubscription:Subscription = null;\n\n  constructor(\n    private routes: ActivatedRoute,\n    private employeeService: EmployeeService,\n    private snackBar: MatSnackBar,\n    private location: Location,\n    private spinnerService: SpinnerService,\n  ) { }\n\n  ngOnInit(): void {\n    this.employeeId = this.routes.snapshot.params['employeeId'];\n    this.getEmployeeData();\n  }\n\n  getEmployeeData(){\n    this.spinnerService.setSpinnerVisibility(true);\n    this.EmployeeDetailSubscription = this.employeeService.getEmployeeDetailsById(this.employeeId).subscribe((res:any)=>{\n    this.spinnerService.setSpinnerVisibility(false);\n    if(res.status){\n        this.employeeData = res.data;\n      } else {\n        this.snackBar.open(\"No data found!!\", '',{\n          duration: 2000,\n          horizontalPosition: 'end',\n          panelClass: ['Employee', 'mat-warn']\n        });\n      }\n    },\n    error =>{\n      this.spinnerService.setSpinnerVisibility(false);\n      this.snackBar.open(\"Something went wrong..!!\", '',{\n        duration: 2000,\n        horizontalPosition: 'end',\n        panelClass: ['Employee', 'mat-warn']\n      });\n    }\n    )\n  }\n\n  goBackToList(){\n    this.location.back();\n  }\n\n  ngOnDestroy(){\n    if(this.EmployeeDetailSubscription){\n      this.EmployeeDetailSubscription.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"employee-detail-container\">\n  <mat-card  fxFlex.xs=\"90\" fxFlex=\"50\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayout.xs=\"column\" class=\"detail_header\">\n      <button matTooltip=\"Go Back\" mat-icon-button (click)=\"goBackToList()\">\n        <mat-icon >keyboard_backspace</mat-icon>\n      </button>\n      <p >Employees Details</p>\n  </div>\n    <div fxLayout=\"column\" fxLayoutGap.xs=\"20px\" fxLayoutGap.gt-xs=\"30px\">\n      <div fxFlex=\"33\">\n        <h4 class=\" mat-h4 db \">Employee Id:</h4>\n        <span>{{employeeData.id}}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <h4 class=\" mat-h4 db \">Employee Name:</h4>\n        <span>{{employeeData.employee_name}}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <h4 class=\" mat-h4 db \">Employee Salary:</h4>\n        <span>{{employeeData.employee_salary}}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <h4 class=\" mat-h4 db \">Employee Age:</h4>\n        <span>{{employeeData.employee_age}}</span>\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { SpinnerService } from 'src/app/shared/spinner.service';\nimport { Employees } from '../Models/employeesListResp';\nimport { EmployeeService } from '../service/employee.service';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.scss']\n})\nexport class EmployeesComponent implements OnInit {\n\n  isNoRecordFound: boolean = false;\n  EmployeeListSubscription: Subscription = null;\n  EmployeeDeleteSubscription: Subscription = null;\n\n  constructor(\n    private employeeService: EmployeeService,\n    private snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private router: Router,\n    private spinnerService: SpinnerService,\n  ) { }\n\n  displayedColumns: string[] = ['id', 'employee_name', 'Actions'];\n  paidDataSource: MatTableDataSource<Employees> = new MatTableDataSource();\n\n  ngOnInit(): void {\n    this.getAllEmployees();\n  }\n\n  getAllEmployees(){\n    this.spinnerService.setSpinnerVisibility(true);\n    this.EmployeeListSubscription = this.employeeService.getAllEmployees().subscribe((res:any)=>{\n      this.spinnerService.setSpinnerVisibility(false);\n      if(res.status){\n        if(res.data.length == 0){\n          this.isNoRecordFound = true;\n        } else {\n          this.isNoRecordFound = false;\n        }\n        this.paidDataSource = res.data;\n      }\n    },\n    error =>{\n      this.spinnerService.setSpinnerVisibility(false);\n      this.snackBar.open(\"Something went wrong..!!\", '',{\n        duration: 2000,\n        horizontalPosition: 'end',\n        panelClass: ['Employee', 'mat-warn']\n      });\n    }\n    )\n  }\n\n  addEmployee() {\n    this.openEmployeeDialog(\"create\", 0);\n  }\n\n  editEmployee(employeeId: number) {\n    this.openEmployeeDialog(\"update\", employeeId);\n  }\n\n  openEmployeeDialog(action: string, id: number): void {\n    const dialogRef = this.dialog.open(CreateEmployeeComponent, {\n      width: \"450px\",\n      disableClose: true,\n      data: {\n        action: action,\n        id: id\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result.isNeedToReload) {\n        this.getAllEmployees();\n      }\n    });\n  }\n\n  deleteEmployee(employeeId: number){\n    this.spinnerService.setSpinnerVisibility(true);\n   this.EmployeeDeleteSubscription = this.employeeService.deleteEmployee(employeeId).subscribe(res=>{\n      this.spinnerService.setSpinnerVisibility(false);\n      if(res.status){\n        this.snackBar.open(res.message, '',{\n          duration: 2000,\n          horizontalPosition: 'end',\n          panelClass: ['mat-toolbar', 'mat-primary']\n        });\n        this.getAllEmployees();\n      }\n    },\n    error =>{\n      this.spinnerService.setSpinnerVisibility(false);\n      this.snackBar.open(\"Something went wrong..!!\", '',{\n        duration: 2000,\n        horizontalPosition: 'end',\n        panelClass: ['Employee', 'mat-warn']\n      });\n    }\n    )\n  }\n\n  viewEmployeeDetails(employeeId: number){\n    this.router.navigate([`dashboard/employeeDetail/${employeeId}`])\n  }\n\n  ngOnDestroy(){\n    if(this.EmployeeListSubscription){\n      this.EmployeeListSubscription.unsubscribe();\n    }\n    if(this.EmployeeDeleteSubscription){\n      this.EmployeeDeleteSubscription.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"employee-list-container\">\n  <mat-card  fxFlex.xs=\"90\" fxFlex=\"58\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayout.xs=\"column\" class=\"table_header\">\n        <p >Employees List</p>\n        <button fxFlex.xs=\"100\" (click)=\"addEmployee()\" mat-raised-button color=\"primary\"  >\n          <mat-icon>add</mat-icon>Add Employee\n        </button>\n    </div>\n    <div *ngIf=\"isNoRecordFound; else recordFound\" >\n      <mat-hint fxLayout=\"row\" fxLayoutAlign=\"center center\">No Record Found</mat-hint>\n    </div>\n    <ng-template #recordFound>\n      <mat-table [dataSource]=\"paidDataSource\">\n        <ng-container matColumnDef=\"id\">\n        <mat-header-cell *matHeaderCellDef>Employee Id</mat-header-cell>\n        <mat-cell *matCellDef=\"let visit\">{{ visit.id }}</mat-cell>\n      </ng-container>\n        <ng-container matColumnDef=\"employee_name\">\n          <mat-header-cell fxLayoutAlign.xs=\"center center\" *matHeaderCellDef>Employee Name</mat-header-cell>\n          <mat-cell fxLayoutAlign.xs=\"center center\" *matCellDef=\"let visit\">\n            {{ visit.employee_name }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"Actions\">\n          <mat-header-cell fxLayoutAlign=\"end center\" *matHeaderCellDef >Actions</mat-header-cell>\n          <mat-cell (click)=\"$event.stopPropagation()\" fxLayoutAlign=\"end center\" *matCellDef=\"let visit\">\n            <div>\n              <mat-menu #dailyPerformanceMenu=\"matMenu\">\n                <a mat-menu-item (click)=\"editEmployee(visit.id)\" >\n                  <mat-icon matListIcon>edit</mat-icon>\n                  <span >Edit</span>\n                </a>\n                <a mat-menu-item (click)=\"deleteEmployee(visit.id)\">\n                  <mat-icon matListIcon>delete_outline</mat-icon>\n                  <span >Delete</span>\n                </a>\n              </mat-menu>\n              <button mat-icon-button [matMenuTriggerFor]=\"dailyPerformanceMenu\">\n                <mat-icon matTooltip=\"Actions\">format_list_bulleted</mat-icon>\n              </button>\n            </div>\n          </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row class=\"example-element-row\" (click)=\"viewEmployeeDetails(row.id)\" *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n      </mat-table>\n    </ng-template>\n  </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { EmployeeListResponse } from '../Models/employeesListResp';\nimport { EmployeeDetailResponse } from '../Models/employeeDetailResp';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllEmployees(){\n    return this.http.get<EmployeeListResponse>(`http://dummy.restapiexample.com/api/v1/employees`);\n  }\n\n  createEmployee(body:any){\n    return this.http.post<any>(`http://dummy.restapiexample.com/api/v1/create`, body);\n  }\n\n  deleteEmployee(employeeId: number) {\n    return this.http.delete<any>(`http://dummy.restapiexample.com/api/v1/delete/${employeeId}`);\n  }\n\n  getEmployeeDetailsById(employeeId: number) {\n    return this.http.get<EmployeeDetailResponse>(`http://dummy.restapiexample.com/api/v1/employee/${employeeId}`);\n  }\n\n  updateEmployee(employeeId: number , body:any) {\n    return this.http.put<any>(`http://dummy.restapiexample.com/api/v1/update/${employeeId}`, body);\n  }\n}\n"],"sourceRoot":"webpack:///"}